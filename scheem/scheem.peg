start =
    whitespace* e:expression whitespace* { return e; }

expression =
    atom
  / "(" whitespace? e:exps whitespace? ")" { return e; }
  / "'" e:expression { return ["quote", e]; }
    
exps = 
    f:expression whitespace r:exps { return [f].concat(r); }
  / f:expression  { return [f]; }

validchar
    = [0-9a-zA-Z_?!+=@#$%^&*/.-]
    
atom =
    chars:validchar+
        { return chars.join(""); }

whitespace =
    ";;" [^\n]* [\n] whitespace*
  / [\n\t ]+         whitespace*
