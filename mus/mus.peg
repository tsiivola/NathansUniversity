{
var quarter_note_length = 496;
var get_pitch = function(pitch, octave) { return pitch + (octave+4); }
var get_duration = function(length) {
    if (length) return quarter_note_length * 4 / length;
    return null; }
}

start =
    sequence_of_notes

sequence_of_notes =
    l:(parallel_notes/repeat) " "+ r:sequence_of_notes
        { return { tag: "seq", left: l, right: r }; }
  / parallel_notes
  / repeat

parallel_notes =
    "(" " "* l:note " "+ r:parallel_notes_inside " "* ")"
        { return { tag: "par", left:l, right:r }; }
  / "(" " "* l:note " "* ")"
        { return l; }
  / note
  / rest

parallel_notes_inside =
    l:note " "+ r:parallel_notes_inside
        { return { tag: "par", left: l, right: r}; }
  / note

repeat =
    "[" " "* s:sequence_of_notes " "* "]" n:num
        { return { tag: "repeat", times: n, section: s}; }

rest =
    "r" l:length
        { return { tag: "res", dur: get_duration(l) }; }

note =
    p:pitch o:octave l:length
        { return { tag:   "note",
                   pitch: get_pitch(p, o),
                   dur:   get_duration(l) };
        }

pitch =
    b:[abcdefg] a:[+-]? { return b+a; }

octave =
    o:"'"+ { return o.length; }
  / o:","+ { return o.length * -1; }
  / ""     { return 0; }

length =
    l:("32" / "16" / "8" / "4" / "2" / "1" / "") { return l; }

num = n:([1-9][0-9]*) { return n.join(""); }
